/* eslint-disable @next/next/no-sync-scripts */
import type { Metadata } from 'next';
import './globals.css';
import { ThemeProvider } from '@/components/theme-provider';
import { AuthProvider } from '@/lib/auth-context';

export const metadata: Metadata = {
  title: 'Alpha Omega',
  description: 'Generated by create next app'
};

export default function RootLayout({
  children
}: Readonly<{
  children: React.ReactNode;
}>) {
  // Determine Square SDK URL based on environment
  const isProduction = process.env.NEXT_PUBLIC_SQUARE_ENVIRONMENT === 'production';
  const squareSDKUrl = isProduction 
    ? 'https://web.squarecdn.com/v1/square.js'
    : 'https://sandbox.web.squarecdn.com/v1/square.js';
  
  // Debug logging for production issues
  console.log('🔧 Layout environment check:', {
    NEXT_PUBLIC_SQUARE_ENVIRONMENT: process.env.NEXT_PUBLIC_SQUARE_ENVIRONMENT,
    isProduction,
    squareSDKUrl,
    NODE_ENV: process.env.NODE_ENV
  });

  return (
    <html lang='en' suppressHydrationWarning>
      <head>
        {/* Square Web Payments SDK - Environment determined by NEXT_PUBLIC_SQUARE_ENVIRONMENT */}
        <script
          type='text/javascript'
          src={squareSDKUrl}
        />
        {/* Add immediate check for Square SDK loading */}
        <script
          dangerouslySetInnerHTML={{
            __html: `
              // Check Square SDK loading with timeout
              setTimeout(() => {
                if (typeof window !== 'undefined') {
                  if (window.Square) {
                    console.log('✅ Square SDK loaded and available');
                  } else {
                    console.error('❌ Square SDK not available after timeout');
                    console.error('📋 Debug info:', {
                      url: '${squareSDKUrl}',
                      userAgent: navigator.userAgent,
                      location: window.location.href
                    });
                  }
                }
              }, 2000);
            `,
          }}
        />
      </head>
      <body
        className='antialiased'
        style={{ fontFamily: 'Helvetica Neue, sans-serif' }}
      >
        <AuthProvider>
          <ThemeProvider
            attribute='class'
            defaultTheme='light'
            enableSystem
            disableTransitionOnChange
          >
            {children}
          </ThemeProvider>
        </AuthProvider>
      </body>
    </html>
  );
}
